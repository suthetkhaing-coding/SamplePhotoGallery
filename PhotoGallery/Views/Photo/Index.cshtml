@model IEnumerable<PhotoGallery.Models.PhotoModel>

@{
    Layout = "_AdminLteLayout";
    ViewData["Title"] = "Index";
}

@{
    if (TempData["errorMessage"] != null)
    {
    <div class="alert alert-danger">
                    @TempData["errorMessage"]
    </div>
    }
}

<h1>Photo Lists</h1>

<p>
    <a asp-action="Create" class="btn btn-sm btn-primary">Upload Photo</a>
</p>

<div id="loader" class="text-center">
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>

<style>
    body {
        position: relative;
    }

    .photo-card {
        display: none;
    }
</style>

<div class="bg-light">
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-md-3 p-md-2 photo-card">
                <div class="card img-thumbnail" style="width: auto">
                    <img class="card-img-top img-thumbnail" src="data:image/png;base64,@Convert.ToBase64String(item.Image)" alt="Card image cap" style="height:200px">
                    <div class="card-body">
                        <h5 class="card-title">@item.Title</h5>
                        <p class="card-text">Upload Date: @item.UploadedDate.ToShortDateString() </p>
                        <a href="@Url.Action("Details", "Photo", new { id = item.Id })" class="btn btn-sm btn-primary">View Details</a>
                        <button type="button" class="btn btn-sm btn-danger" onclick="deleteItem(@item.Id)">Delete</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="pagination" style="display: flex; align-items: center; justify-content: space-between;">
    <div style="display: flex; align-items: center;">
        <label for="count-dropdown" style="margin-right: 10px;">Show:</label>
        <select id="count-dropdown" class="form-control" style="width: auto;">
            <option value="3">3</option>
            <option value="6">6</option>
            <option value="9">9</option>
        </select>
    </div>
    <div>
        <button id="prev-btn" class="btn btn-sm btn-primary"><i class="fas fa-chevron-left"></i></button>
        <span id="page-count" class="text-black" style="margin: 0 10px;"></span>
        <button id="next-btn" class="btn btn-sm btn-primary"><i class="fas fa-chevron-right"></i></button>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        var currentPage = 1;
        console.log( "test");
        var itemsPerPage = parseInt($('#count-dropdown').val()); // Get initial value from dropdown
        console.log(itemsPerPage + "length");

        function updatePagination() {
            var totalItems = $('.photo-card').length;
            var totalPages = Math.ceil(totalItems / itemsPerPage);

            $('.photo-card').hide();
            $('.photo-card').slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).show();

            // Handle buttons enable/disable
            $('#prev-btn').prop('disabled', false);
            $('#next-btn').prop('disabled', false);

            if (currentPage == 1) {
                $('#prev-btn').prop('disabled', true);
            }

            if (currentPage == totalPages) {
                $('#next-btn').prop('disabled', true);
            }

            // Show current page and total pages
            $('#page-count').text('Page ' + currentPage + ' of ' + totalPages);
        }
        // $(document).ready(function () $(window).on("load", function()
        $(document).ready(function () {
            updatePagination();

            $('#prev-btn').click(function () {
                if (!$(this).prop('disabled')) {
                    currentPage--;
                    updatePagination();
                }
            });

            $('#next-btn').click(function () {
                if (!$(this).prop('disabled')) {
                    currentPage++;
                    updatePagination();
                }
            });

            $('#count-dropdown').change(function () {
                itemsPerPage = parseInt($(this).val()); // Update items per page when dropdown changes
                currentPage = 1; // Reset current page
                updatePagination();
            });

            $('#loader').hide(); // Hide loader
        });

        function deleteItem(id) {
            ConfirmMessageBox().then((confirmed) => {
                if (confirmed) {
                    $.ajax({
                        url: '/Photo/Delete',
                        type: 'POST',
                        data: { id: id },
                        success: function (data) {
                            console.log(data);
                            if (data.respCode == "000") {
                                SuccessMessageBoxWithLink('Photo Delete is Successful!', '/Photo/Index', 'Success');
                            } else if (data.respCode == "999") {
                                ErrorMessageBox('Photo Delete is Fail!');
                            } else if (data.respCode == "777") {
                                DeleteMessageWithLink(data.respMsg, '/Access/Login', 'Error');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr.responseText);
                            console.log(error + " error log");
                            if (xhr.status == 403 || xhr.status == 401) {
                                ErrorMessageBox('You are not authorized to perform this action.');
                            }
                        },
                    });
                }
            });

        }
    </script>
}

